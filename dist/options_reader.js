// Generated by CoffeeScript 1.11.1
(function() {
  var OptionsReader, REQUIRED_SCRIPT_OPTIONS, _, minimist,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _ = require('lodash');

  minimist = require('minimist');

  REQUIRED_SCRIPT_OPTIONS = ['result', 'write', 'username', 'password', 'config'];

  OptionsReader = (function() {
    function OptionsReader() {
      this.alias = {
        u: 'username',
        p: 'password',
        c: 'config',
        r: 'result',
        i: 'runid',
        w: 'write'
      };
      this.unknown = function(opt) {
        throw new Error("unrecognized option " + opt + " passed in command line");
      };
    }

    OptionsReader.prototype.parse = function() {
      var missingOptions;
      this.opts = minimist(process.argv.slice(2), {
        alias: this.alias,
        unknown: this.unknown
      });
      missingOptions = this._validateOptions();
      if (missingOptions.length) {
        throw new Error("script is missing these required options: " + missingOptions);
      }
      return this.opts;
    };

    OptionsReader.prototype._validateOptions = function() {
      var params, required_options;
      params = Object.keys(this.opts);
      required_options = REQUIRED_SCRIPT_OPTIONS;
      if (this.opts.write) {
        required_options.splice(0, 1);
      } else {
        required_options.splice(1, 1);
      }
      return _.compact(required_options.map(function(field) {
        if (indexOf.call(params, field) < 0) {
          return field;
        }
      }));
    };

    return OptionsReader;

  })();

  module.exports = OptionsReader;

}).call(this);
